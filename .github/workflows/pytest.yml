name: pytest

# Only build PRs, the master branch, and releases.
on:
  pull_request:
  push:
    branches:
      - master
      - travis-to-GA  ################ TODO ########### TODO ######### TODO ####
  release:
    types:
      - published

# Use bash by default in all jobs
defaults:
  run:
    # Using "-l {0}" is necessary for conda environments to be activated
    # But this breaks on MacOS if using actions/setup-python:
    # https://github.com/actions/setup-python/issues/132
    shell: bash

jobs:
  test:

    name: ${{ matrix.case.os }} py${{ matrix.case.python-version }} ${{ matrix.case.name }}
    runs-on: ${{ matrix.case.os }}-latest

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, ]  # macos, windows]  # Only Linux currently.
        case:
          - python-version: 3.6
            name: full
            os: ubuntu
            conda: scipy numba matplotlib
            pip: pytest-mpl scooby
            test: "--mpl"
#           - python-version: 3.7
#             name: minimal  # <= TODO minimal environment
#             os: ubuntu
#             conda: "'scipy<1.1' 'numba<0.45' matplotlib scooby"
#             pip: ""
#             test: ""
#           - python-version: 3.7
#             name: plain
#             os: ubuntu
#             conda: scipy numba
#             test: ""
#           - python-version: 3.7
#             name: full
#             os: ubuntu
#             conda: scipy numba matplotlib scooby
#             test: "--mpl"
#           - python-version: 3.8
#             name: plain
#             os: ubuntu
#             conda: scipy numba
#             test: ""
#           - python-version: 3.8
#             name: plain
#             os: macos
#             conda: scipy numba
#             test: ""
#           - python-version: 3.8
#             name: plain
#             os: windows
#             conda: scipy numba
#             test: ""

    env:
      # Used to tag CodeCov submissions
      OS: ${{ matrix.case.os }}
      PYTHON: ${{ matrix.case.python-version }}

    steps:

      # Cancel any previous run of the test job; [pin v0.6.0]
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@ce177499ccf9fd2aded3b0426c97e5434c2e8a73
        with:
          access_token: ${{ github.token }}

      # Checks-out your repository under $GITHUB_WORKSPACE
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Need to fetch more than the last commit so that setuptools_scm can
          # create the correct version string. If the number of commits since
          # the last release is greater than this, the version still be wrong.
          # Increase if necessary.
          fetch-depth: 100
          # The GitHub token is preserved by default but this job doesn't need
          # to be able to push to GitHub.
          persist-credentials: false

      # Need the tags so that setuptools_scm can form a valid version number
      - name: Fetch git tags
        run: git fetch origin 'refs/tags/*:refs/tags/*'

      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          miniconda-version: "latest"
          mamba-version: "*"
          python-version: ${{ matrix.case.python-version }}
          activate-environment: tenv
          auto-activate-base: false
          channels: conda-forge,defaults
          channel-priority: strict

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda config --set always_yes yes --set changeps1 no
          conda config --show-sources
          conda config --show
          mamba install ${{ matrix.case.conda }} pytest pytest-cov pip
          pip install setuptools_scm coveralls pytest-flake8 ${{ matrix.case.pip }}
          conda info -a
          conda list

      - name: Install and test with pytest
        shell: bash -l {0}
        run: |
          python setup.py install
          cp ./tests/matplotlibrc ./.
          pytest --cov=empymod --flake8 --cov-report xml  ${{ matrix.case.test }}

      - name: Upload coverage to CodeCov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          env_vars: OS,PYTHON
          # Don't mark the job as failed if the upload fails for some reason.
          # It does sometimes but shouldn't be the reason for running
          # everything again unless something else is broken.
          fail_ci_if_error: false

  # TODO: GitHub Actions has (not yet) an allow_failure flag or similar.
  # https://github.com/actions/toolkit/issues/399
  # linkcheck:
  #
  #   name: linkcheck
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #
  #     # Checks-out your repository under $GITHUB_WORKSPACE
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #
  #     - name: Setup Python
  #       uses: actions/setup-python@v2
  #       with: python-version: 3.8
  #
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirementes-dev.txt
  #
  #     - name: Test with pytest
  #       run: |
  #         cd docs
  #         make html -b linkcheck

#   deploy:
#     needs: test
#     name: Deploy to PyPI
#     runs-on: ubuntu-latest
#     # Only from the origin repository, not forks; only master.
#     if: github.repository_owner == 'empymod' && github.ref == 'refs/heads/master'
# 
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE
#       - name: Checkout
#         uses: actions/checkout@v2
#         with:
#           # Need to fetch more than the last commit so that setuptools_scm can
#           # create the correct version string. If the number of commits since
#           # the last release is greater than this, the version will still be
#           # wrong. Increase if necessary.
#           fetch-depth: 100
#           # The GitHub token is preserved by default but this job doesn't need
#           # to be able to push to GitHub.
#           persist-credentials: false
# 
#       # Need the tags so that setuptools_scm can form a valid version number
#       - name: Fetch git tags
#         run: git fetch origin 'refs/tags/*:refs/tags/*'
# 
#       - name: Setup Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: "3.8"
# 
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install wheel
#           pip install -r requirements-dev.txt
# 
#       - name: Build source and wheel distributions
#         run: |
#           # Change setuptools-scm local_scheme to "no-local-version" so the
#           # local part of the version isn't included, making the version string
#           # compatible with Test PyPI.
#           sed --in-place "s/'root'/'local_scheme':'no-local-version','root'/g" setup.py
#           # Build source and wheel packages
#           python setup.py sdist
#           python setup.py bdist_wheel
#           echo ""
#           echo "Generated files:"
#           ls -lh dist/
# 
#       - name: Publish to Test PyPI
#         if: success()
#         # Hash corresponds to v1.4.1
#         uses: pypa/gh-action-pypi-publish@54b39fb9371c0b3a6f9f14bb8a67394defc7a806
#         with:
#           user: __token__
#           password: ${{ secrets.TEST_PYPI_PASSWORD }}
#           repository_url: https://test.pypi.org/legacy/
#           # Allow existing releases on test PyPI without errors.
#           # NOT TO BE USED in PyPI!
#           skip_existing: true
# 
#       - name: Publish to PyPI
#         # Only for releases
#         if: success() && github.event_name == 'release'
#         # Hash corresponds to v1.4.1
#         uses: pypa/gh-action-pypi-publish@54b39fb9371c0b3a6f9f14bb8a67394defc7a806
#         with:
#           user: __token__
#           password: ${{ secrets.PYPI_PASSWORD }}
